짝수와 홀수 - Javascript
문제
주어진 정수 num이 짝수일 경우 "Even"을 반환하고 홀수인 경우 "Odd"를 반환하는 함수, solution을 완성해주세요.

내 풀이
굉장히 쉬운 문제였다. 나머지 연산자인 "%"만 알고 있으면 금방 풀 수 있는 문제이다. 정수를 2로 나눈 나머지가 0일 경우 짝수이고, 0이 아닐 경우 홀수이다.

function solution(num) {
    var answer = '';
    if (num % 2 === 0) {
        return answer = "Even"
    } else {
        return answer = "Odd"
    }
    return answer;
}
// 삼항연산자를 이용한 풀이
function solution(num) {
    return (num % 2 === 0? "Even":"Odd")
}
// num을 2로 나눈 나머지가 0이면(true) Even을 반환하고, 그렇지 않으면(false) Odd를 반환해라.

삼항연산자란?
조건부 삼항 연산자는 JavaScript에서 세 개의 피연산자를 취할 수 있는 유일한 연산자로, 보통 if 명령문의 단축 형태로 쓰인다.

직사각형 별 찍기(자바스크립트_javascript)
프로그래머스[Level 1]
자바스크립트로 직사각형 별 찍기
문제설명

이 문제에는 표준 입력으로 두 개의 정수 n과 m이 주어집니다.
별(*) 문자를 이용해 가로의 길이가 n, 세로의 길이가 m인 직사각형 형태를 출력해보세요.
제한 조건

n과 m은 각각 1000 이하인 자연수입니다.
문제
process.stdin.setEncoding('utf8');
process.stdin.on('data', data => { //입력받은 숫자를 'data에 받는다'
    const n = data.split(" "); // data(입력받은 숫자)를 배열로 변경
    const a = Number(n[0]), b = Number(n[1]); //a는 한줄에대한 별의 갯수, b는 몇줄 출력
    console.log(a);//알지?
    console.log(b);//알면서
});
풀이
process.stdin.setEncoding('utf8');
process.stdin.on('data', data => {
    const n = data.split(" ");
    const a = Number(n[0]), b = Number(n[1]);
    for(let i=0; i<b; i++){ //i을 선언해주고 몇줄(b)만큼 반복
        let str = ""; //출력할 변수 선언
        for(let j=0; j<a; j++){ // j선언후 별을 한줄에 몇개 찍을지 반복
            str = str + "*" //출력할 변수에 별을 담는다
        }
    console.log(str) // 출력
    }


});

가운데 글자 가져오기 - Javascript
문제
단어 s의 가운데 글자를 반환하는 함수, solution을 만들어 보세요. 단어의 길이가 짝수라면 가운데 두글자를 반환하면 됩니다.

입출력예제
s	return
"abcde"	"c"
"qwer"	"we"
풀이
문자열의 길이가 짝수인지 홀수인지 판별한다.
짝수이면 가운데 두 글자를 반환하고, 홀수이면 가운데 한 글자만 반환한다.
function solution(s) {
    var answer = '';

    if (s.length % 2 == 0 ) { // 짝수일 경우,
        answer = s[s.length / 2 - 1] + s[s.length / 2];
    } else {
        answer = s[Math.floor(s.length/2)]; // 홀수일 경우, 반내림 하기
    }
    return answer;
}
짝수이면, 문자열의 길이를 2로 나누어 해당 인덱스의 이전 값과 해당 인덱스 값을 출력해주면 된다.
문자열의 길이가 홀수일 때 2로 나누면 나눈 값은 소숫점이 될 것이다. 그러므로 나눈 값에 Math.floor()메서드를 사용해 반내림을 해주어야 한다. 반올림이 아닌 반내림을 하는 이유는 인덱스는 0부터 시작하기 때문이다.
예제 1번을 보자. "abcde" 문자열의 길이는 5이다. 출력 값은 "c"이고 인덱스 값은 2이다.
즉, 5 / 2 = 2.5인데, 인덱스 값을 구하려면 반내림을 해야한다.

두 정수 사이의 합 - Javascript
문제
두 정수 a, b가 주어졌을 때 a와 b 사이에 속한 모든 정수의 합을 리턴하는 함수, solution을 완성하세요.
예를 들어 a = 3, b = 5인 경우, 3 + 4 + 5 = 12이므로 12를 리턴합니다.

제한 조건
a와 b가 같은 경우는 둘 중 아무 수나 리턴하세요.
a와 b는 -10,000,000 이상 10,000,000 이하인 정수입니다.
a와 b의 대소관계는 정해져있지 않습니다.

입출력 예제
a	b	return
3	5	12
3	3	3
5	3	12
풀이
a, b 두 정수 사이에 속한 모든 정수의 합을 구하면 되는 문제이다. 여기서 a, b가 같을 경우는 둘 중 아무 값을 반환한다.

function solution(a, b) {
    var answer = 0;
    let num = [];
    if (a === b) {
        answer = a;
    } else {
        num.push(a,b);
        num.sort((a,b)=>a-b); // 오름차순 정렬
        for (let i=num[0]; i<num[1]+1; i++) {
            answer += i
        }
    }

    return answer;
}
a부터 b까지 순차적으로 for문을 돌리기 위해, a와 b를 담을 빈 배열을 만든다. num=[]
a와 b가 같을 경우와 다를 경우의 조건식을 만들어준다.
같으면 a를 반환하고 다르면 num 배열에 넣어준다.
예제 3번을 보면 a>b의 경우인데, 이럴 경우 for문에서 시작값을 a로 하면 기댓값이 나오지 않는다.
작은 수부터 시작하여 더해야 하기 때문에, num 배열의 요소들을 오름차순 정렬해준다.
이 문제는 생각할 필요도 없이 간단하게 풀 수 있는 문제였다.
하지만, 다른 사람의 풀이를 찾다가 대단한 것을 발견했다!

다른 사람의 풀이
 return (a+b)*(Math.abs(b-a)+1)/2;
나는 a < b의 경우, a부터 b까지 하나씩 더하여 푸는 방법을 생각했다. (아주 간단)
그러나 이 문제에도 공식이 존재했다!

a < b 일 때,
(a+b)*(b - a - 1)/2 = a부터 b의 합

또, 나는 a > b의 경우를 오름차순 정렬로 해결했는데 Math.abs()메서드를 사용하여 풀어나가는 방법도 있었다.

Math.abs(): 주어진 숫자의 절대값을 반환한다. x가 양수이거나 0이라면 x를 반환하고, x가 음수라면 x의 반대값, 즉 양수를 반환한다